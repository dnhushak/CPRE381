DEPTH=1024; 	% Memory depth and width are required 
		% DEPTH is the number of addresses 
WIDTH = 32; 	% WIDTH is the number of bits of data per word
		% DEPTH and WIDTH should be entered as decimal numbers

ADDRESS_RADIX = DEC; 	% Address and value radixes are required
DATA_RADIX = BIN; 	% Enter BIN, DEC, HEX, OCT, or UNS; unless
			% otherwise specified, radixes = HEX

-- Specify values for addresses, which can be single address or range
-- SOME THINGS TO CONSIDER
-- 1) This memory is word-addressable, versus the MIPS conceptual byte-addressable memory.
--    This means that address 1 corresponds to word 1, address 2 corresponds to word 2, etc.
--    Since MIPS will be generating byte addresses, you will have to create some (very simple)
--    logic in your VHDL wrapper to deal with byte/word offsets. 
-- 2) The "single address" notation seems to be least likely to cause confusion so that is what
--    I recommend. 
-- 3) The values need to be in 32-bit hex form (i.e. don't use F when you really mean 0000000F).

-- Sample C code:
--   if (a != b) c = a + b;
-- Assume a @ 0x0000($zero), b @ 0x0004($zero), c @ 0x0008($zero0
-- Assembly code:
     
--0   lw $4, 0($0)
--1   noop
--2   noop
--3   lw $5, 4($0)
--4   noop
--5   noop
--6   addi $29, $29, -20
--7   noop
--8   noop
--9   sw $31, 16($29)
--10  noop
--11  noop
--12  sw $19, 12($29)
--13  noop
--14  noop
--15  sw $18, 8($29)
--16  noop
--17  noop
--18  sw $17, 4($29)
--19  noop
--20  noop
--21  sw $16, 0($29)
--22  noop
--23  noop
--24  addi $18, $4, 0
--25  noop
--26  noop
--27  addi $19, $5, 0
--28  noop
--29  noop
--30  addi $16, $0, 0
--31  noop
--32  noop
--33  slt $8, $16, $19
--34  noop
--35  noop
--36  beq $8, $0, 48                                        
--37  noop
--38  noop
--39  addi $17, $16, -1
--40  noop
--41  noop
--42  slt $8, $17, $0
--43  noop
--44  noop
--45  bne $8, $0, 33                                        
--46  noop
--47  noop
--48  addi $9, $17, $2
--49  noop
--50  noop
--51  add $10, $18, $9
--52  noop
--53  noop
--54  lw $11, 0($10)
--55  noop
--56  noop
--57  lw $12, 4($10)
--58  noop
--59  noop
--60  slt $8, $12, $11
--61  noop
--62  noop
--63  beq $8, $0, 15                                         
--64  noop
--65  noop
--66  addi $4, $18, 0
--67  noop
--68  noop
--69  addi $5, $17, 0
--70  noop
--71  noop
--72  jal 108                                               
--73  noop
--74  noop
--75  addi $17, $17, -1
--76  noop
--77  noop
--78  j 42     
--79  noop
--80  noop
--81  addi $16, $16, 1
--82  noop
--83  noop
--84  j 33                                                    --needs changed
--85  noop
--86  noop
--87  lw $16, 0($29)
--88  noop
--89  noop
--90  lw $17, 4($29)
--91  noop
--92  noop
--93  lw $18, 8($29)
--94  noop
--95  noop
--96  lw $19, 12($29)
--97  noop
--98  noop
--99  lw $31, 16($29)
--100 noop
--101 noop
--102 addi $29, $29, 20
--103 noop
--104 noop
--105 jr $31
--106 noop
--107 noop
--108 addi $9, $5, $2
--109 noop
--110 noop
--111 add $9, $4, $9
--112 noop
--113 noop
--114 lw $8, 0($9)
--115 noop
--116 noop
--117 lw $10, 4($9)
--118 noop
--119 noop
--120 sw $8, 4($9)
--121 noop
--122 noop
--123 sw $10, 0($9)
--124 noop
--125 noop
--126 jr $31
--17..end  noop
CONTENT
BEGIN
-- Instruction formats
--R ======-----=====-----=====------
--I ======-----=====----------------
--J ======--------------------------
1:10001100000001000000000000000000;
2:10001100000001010000000000000100;
3:00100011101111011111111111101100;
4:00000000000000000000000000000000;
5:00000000000000000000000000000000;
6:00000000000000000000000000000000;
7:10101111101111110000000000010000;
8:10101111101100110000000000001100;
9:10101111101100100000000000001000;
10:10101111101100010000000000000100;
11:10101111101100000000000000000000;
12:00100000100100100000000000000000;
13:00100000101100110000000000000000;
14:00100000000100000000000000000000;
15:00000010000100110100000000101010;
16:00000000000000000000000000000000;
17:00000000000000000000000000000000;
18:00000000000000000000000000000000;
19:00010001000000000000000000101001;
20:00100010000100011111111111111111;
21:00000000000000000000000000000000;
22:00000000000000000000000000000000;
23:00000000000000000000000000000000;
24:00000010001000000100000000101010;
25:00000000000000000000000000000000;
26:00000000000000000000000000000000;
27:00000000000000000000000000000000;
28:00010101000000000000000000011011;
29:00000000000100010100100010000000;
30:00000000000000000000000000000000;
31:00000000000000000000000000000000;
32:00000000000000000000000000000000;
33:00000010010010010101000000100000;
34:00000000000000000000000000000000;
35:00000000000000000000000000000000;
36:00000000000000000000000000000000;
37:10001101010010110000000000000000;
38:10001101010011000000000000000100;
39:00000000000000000000000000000000;
40:00000000000000000000000000000000;
41:00000000000000000000000000000000;
42:00000001100010110100000000101010;
43:00000000000000000000000000000000;
44:00000000000000000000000000000000;
45:00000000000000000000000000000000;
46:00010001000000000000000000001001;
47:00100010010001000000000000000000;
48:00100010001001010000000000000000;
49:00001100000100000000000001000110;
50:00000000000000000000000000000000;
51:00000000000000000000000000000000;
52:00000000000000000000000000000000;
53:00100010001100011111111111111111;
54:00000000000000000000000000000000;
55:00001000000100000000000000010100;
56:00000000000000000000000000000000;
57:00000000000000000000000000000000;
58:00000000000000000000000000000000;
59:00100010000100000000000000000001;
60:00001000000100000000000000001110;
61:00000000000000000000000000000000;
62:00000000000000000000000000000000;
63:00000000000000000000000000000000;
64:10001111101100000000000000000000;
65:10001111101100010000000000000100;
66:10001111101100100000000000001000;
67:10001111101100110000000000001100;
68:10001111101111110000000000010000;
69:00100011101111010000000000010100;
70:00001000000100000000000001011001;
71:00000000000000000000000000000000;
72:00000000000000000000000000000000;
73:00000000000000000000000000000000;
74:00000000000001010100100010000000;
75:00000000000000000000000000000000;
76:00000000000000000000000000000000;
77:00000000000000000000000000000000;
78:00000000100010010100100000100000;
79:00000000000000000000000000000000;
80:00000000000000000000000000000000;
81:00000000000000000000000000000000;
82:10001101001010000000000000000000;
83:10001101001010100000000000000100;
84:00000000000000000000000000000000;
85:00000000000000000000000000000000;
86:00000000000000000000000000000000;
87:10101101001010100000000000000000;
88:10101101001010000000000000000100;
89:00000011111000000000000000001000;
[90..140] : 00000000; 			
END;